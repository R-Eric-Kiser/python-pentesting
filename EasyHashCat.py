# https://medium.com/@ekiser_48014/python-penetration-testing-using-hashcat-and-python-to-crack-windows-passwords-34cb4f052bf3
# Tool that simplifies the Hashcat cracking process.

import subprocess

# Prompt for type of hash
hash_type = input("Enter the type of hash (e.g., NTLM, SHA1, SHA256, MD5): ")

# Create a dictionary to map hash type to hashcat mode
hash_modes = {
    'NTLM': '1000',
    'SHA1': '100',
    'SHA256': '1400',
    'MD5': '0'
}

# Check if entered hash type is valid
if hash_type.upper() not in hash_modes:
    print("Invalid hash type. Supported hash types are: NTLM, SHA1, SHA256, and MD5.")
    exit()

# Get the hash mode from the dictionary
hash_mode = hash_modes[hash_type.upper()]

# Prompt for location of hash file
hash_file = input("Enter the location of the hash file: ")

# Prompt for location to save findings
output_file = input("Enter the location to save the findings: ")

# Prompt for location of word list file
word_list_file = input("Enter the location of the word list file: ")

# Define hashcat command with multithreading option
hashcat_command = f"hashcat -m {hash_mode} -a 0 -w {word_list_file} --potfile-disable --remove --outfile {output_file} --threads 4 {hash_file}"

# Execute hashcat command using subprocess
try:
    output = subprocess.check_output(hashcat_command, shell=True)
    print(output.decode("utf-8"))
except subprocess.CalledProcessError as e:
    print(f"Error executing hashcat command: {e}")
