import docker

# Get Docker credentials
username = input("Enter Docker username: ")
password = input("Enter Docker password: ")
registry = input("Enter Docker registry URL (leave blank for default): ")

# Get Docker daemon URL
daemon_url = input("Enter Docker daemon URL (leave blank for local daemon): ")

# Create Docker client
if registry:
    client = docker.DockerClient(base_url=registry, username=username, password=password)
else:
    if daemon_url:
        client = docker.DockerClient(base_url=daemon_url, username=username, password=password)
    else:
        client = docker.from_env()

# Get Docker container names or IDs
container_names = input("Enter Docker container names or IDs (comma-separated): ")
container_names_list = container_names.split(',')
containers = []
for container_name in container_names_list:
    if '@' in container_name:
        # Remote container specified
        container_info = container_name.split('@')
        container = client.containers.get(container_info[1]).client.api.get_container(container_info[0])
        containers.append(client.containers.get(container['Id']))
    else:
        # Local container specified
        containers.append(client.containers.get(container_name))

# Create menu
while True:
    print("\nMenu")
    print("1. Search for file or folder")
    print("2. Run command")
    print("3. Exit")

    choice = input("Enter choice: ")

    if choice == "1":
        # Search for file or folder
        search_query = input("Enter search query: ")
        for container in containers:
            output = container.exec_run(['find', '/', '-name', search_query])
            print("Results for container %s:" % container.name)
            print(output.output.decode('utf-8'))
    elif choice == "2":
        # Run command
        command = input("Enter command to run: ")
        for container in containers:
            output = container.exec_run(command)
            print("Results for container %s:" % container.name)
            print(output.output.decode('utf-8'))
    elif choice == "3":
        # Exit
        break
    else:
        print("Invalid choice, try again")
