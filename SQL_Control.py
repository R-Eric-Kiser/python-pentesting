import pyodbc
from azure.identity import InteractiveBrowserCredential

# prompt the user to authenticate with Azure AD
credential = InteractiveBrowserCredential()

# set up the connections to the SQL Servers using Azure AD authentication
conn1 = pyodbc.connect(f'Driver=ODBC Driver 17 for SQL Server;'
                       f'Server=server1_name.database.windows.net;'
                       f'Database=database1_name;'
                       f'UID={credential._get_username()};'
                       f'Authentication=ActiveDirectoryInteractive;',
                       AccessToken=credential.get_token('https://database.windows.net/').token)

conn2 = pyodbc.connect(f'Driver=ODBC Driver 17 for SQL Server;'
                       f'Server=server2_name.database.windows.net;'
                       f'Database=database2_name;'
                       f'UID={credential._get_username()};'
                       f'Authentication=ActiveDirectoryInteractive;',
                       AccessToken=credential.get_token('https://database.windows.net/').token)

# create cursor objects for each connection
cursor1 = conn1.cursor()
cursor2 = conn2.cursor()

# list the tables in the first database
tables1 = [table.table_name for table in cursor1.tables(tableType='TABLE')]

# iterate through the tables and list the columns and fields
for table in tables1:
    print('Table 1:', table)
    cursor1.execute(f'SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = N\'{table}\'')
    columns = [column.COLUMN_NAME for column in cursor1.fetchall()]
    print('Columns:', columns)
    for column in columns:
        cursor1.execute(f'SELECT TOP 10 {column} FROM {table}')
        fields = [field[0] for field in cursor1.fetchall()]
        print(f'{column}:', fields)

# list the tables in the second database
tables2 = [table.table_name for table in cursor2.tables(tableType='TABLE')]

# iterate through the tables and list the columns and fields
for table in tables2:
    print('Table 2:', table)
    cursor2.execute(f'SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = N\'{table}\'')
    columns = [column.COLUMN_NAME for column in cursor2.fetchall()]
    print('Columns:', columns)
    for column in columns:
        cursor2.execute(f'SELECT TOP 10 {column} FROM {table}')
        fields = [field[0] for field in cursor2.fetchall()]
        print(f'{column}:', fields)

# close the connections
conn1.close()
conn2.close()
